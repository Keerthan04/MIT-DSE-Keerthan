//220968002
//Keerthan Kumar C
//implementation of queues using Linked List
#include<iostream>
#include<cstdlib>
using namespace std;
struct node
{
        int data;
        struct node* next;
};
struct node* front=NULL;
struct node* rear=NULL;
void enqueue()
{
        struct node* newnode=new struct node;
        cout<<"Please enter data to add"<<endl;
        cin>>newnode->data;newnode->next=NULL;
        if(front==NULL && rear==NULL)
        {
                front=newnode;
                rear=newnode;
        }
        else
        {
                rear->next=newnode;
                rear=newnode;
        }
}
void dequeue()
{
        if(front==NULL && rear==NULL)
                cout<<"The queue is empty"<<endl;
        else if(front==rear)
        {
                struct node* temp;
                temp=front;
                delete temp;
                front=rear=NULL;
        }
        else
        {
                struct node* temp;
                temp=front;
                front=front->next;
                delete temp;
        }
}
void display()
{
        struct node* temp;
        cout<<"The queue elements are:"<<endl;
        temp=front;
        while(temp!=NULL)
        {
                cout<<temp->data<<" ";
                temp=temp->next;
        }
}
void Front()
{
        cout<<"The ront element in the queue is "<<front->data<<endl;
}
void Rear()
{
        cout<<"The rear element in the queue is "<<rear->data<<endl;
}
int main()
{
        int ch;
        while(1)
        {
                cout<<"Please enter your choice"<<endl;
                cout<<"1.Enqueue element to the queue"<<endl;
                cout<<"2.Dequeue element from the queueu"<<endl;
                cout<<"3.Display elements of queue"<<endl;
                cout<<"4.View front element of the queue"<<endl;
                cout<<"5.View rear element of the queue"<<endl;
                cout<<"6.Exit"<<endl;
                cin>>ch;
                switch(ch)
                {
                        case 1:
                                enqueue();
                                break;
                        case 2:
                                dequeue();
                                break;
                        case 3:
                                display();
                                break;
                        case 4:
                                Front();
                                break;
                        case 5:
                                Rear();
                                break;
                        case 6:
                                exit(1);
                }
        }
}
