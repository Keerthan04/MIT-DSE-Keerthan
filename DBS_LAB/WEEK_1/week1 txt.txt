CREATING TABLES

Create table EMP(EMPCODE Number(3) Constraint PK_EMPNO Primary key,
NAME varchar2(10),
QUALIFICATION varchar2(7) Constraint VALID_QUALIF Check(QUALIFICATION IN('BTECH','MTECH','MSC','MCA','PHD')),
PHONE Number(10),
EMAIL varchar2(10) Constraint EMAIL_DOMAIN Check(EMAIL LIKE '%digisol.com'),
DESIGNATION varchar2(20) Constraint VALID_DESIGNATION Check(DESIGNATION IN('DEVELOPER','PROJECT LEADER','PROJECT MANAGER','TECHNICAL HEAD','PROJECT DIRECTOR','PROJECT LEADER','CEO')),
SALARY NUMBER(7) Constraint SALARY_RANGE Check(SALARY between 97000 AND 300000));

Create table SKILL(SKILLID char(3) Constraint UNQ_SKILLID Unique,
SKILLNAME varchar(20) Constraint UNQ_SKILNAME Unique);

Create table EMP_SKILL(EMPNO Number(3) Constraint FK_EMPNO References EMP,
SKILLID char(3) Constraint FK_SKILLID References SKILL(SKILLID) ON DELETE CASCADE,
SKILL_EXPERIENCE Number(3) Check(SKILL_EXPERIENCE >0));


Create table WORK_EXP(EMPCODE Number(3) Constraint EMPCODE_FK References EMP, PRJID Char(3) Constraint PRJID_FK references PRJ_DETAILS, 
WORK_EXPERIENCE Number(2) Constraint INVALID_WKEXP Check(WORK_EXPERIENCE >=0) NOT NULL,CLIENT_ID Char(3) Constraint Client_id References ClIENT on delete set null, 
Rating Char(1) Constraint Invalid_rating Check(Rating in('A','B','C')),PRIMARY KEY(EMPCODE,PRJID));


Create table CLIENT(CLIENT_ID char(3) Constraint PK_CLIENTID PRIMARY KEY Constraint STARTSWITH_C Check(ClIENT_ID Like 'C%'), NAME varchar2(10), 
Phone Char(14) Constraint PHONE_FORMAT Check(
   Phone like '+91-%' OR
   Phone like '+81-%' OR
   Phone like '+31-%' OR
   Phone like '+48-%' OR
   Phone like '+44-%'));


Create table PRJ_DETAILS(PRJID char(3) Constraint PK_PRJID PRIMARY KEY Constraint STARTSWITH_P Check(PRJID LIKE 'P%'), PRJ_NAME varchar2(10), 
START_DATE Date, END_DATE Date , ACTUAL_END_DATE Date , LEAD_BY_EMPCODE Number(3) CONSTRAINT FK_LEAD_EMP References EMP, BUDGET_ALLOCATED Number(10,1), 
Actual_Budget Number(10,1),Constraint END_DATE_GARTER_START_DATE Check(END_DATE > START_DATE) ,CONSTRAINT ACTUAL_DATE_CHECK Check(ACTUAL_END_DATE >=END_DATE) );


Create table FAMILY_DEPENDENTS(EMPNO references EMP, DEP_NAME varchar(20) , RELATIONSHIP varchar(16), AGE Number(3) CONSTRAINT VALID_AGE 
Check(AGE between 1 and 130),PRIMARY KEY(EMPNO, DEP_NAME));


Create table MEDICAL_POLICY(EMPNO References EMP, POLICYNO varchar2(6) Check(POLICYNO LIKE 'MED%'), PREMIUM Number(5) Constraint PRE_AMOUNT Check(PREMIUM >0), 
POLICYDATE Date,CONSTRAINT MED_POL_PK PRIMARY KEY(EMPNO,POLICYNO));


Create table PAY_CHECK(EMPCODE References EMP,PAY_DATE Date, REGULAR_INCREMENT Number(4) CONSTRAINT VALID_REGU_INCENTIVE CHECK 
(REGULAR_INCREMENT IN (2000,3000,5000,7000,9000)),PERFROMANCE_INCENTIVE Number(5), DA Number(7),PF Number(6),OTHER_INCENTIVES Number(4), 
ADVANCE_TAX Number(5),PRIMARY KEY(EMPCODE,PAY_DATE));
 

QUESTIONS
2.1

Alter table EMP ADD(REPORTS_TO CONSTRAINT FK_REPORTS_TO_EMPCODE References EMP);

2.2
Alter table SKILL ADD CONSTRAINT STARTSWITHS CHECK(SKILLID LIKE '%S');

2.3
Alter table EMP_SKILL ADD CONSTRAINT PK_EMPNO_SKILLID PRIMARY KEY(EMPNO,SKILLID);

2.4
Alter table PRJ_DETAILS MODIFY(PRJ_NAME CONSTRAINT UNQ_PRJ_NAME UNIQUE); 

2.5
Alter table CLIENT ADD(EMAIL varchar(20) CONSTRAINT VALID_EMAIL CHECK(EMAIL LIKE '%@___'));

2.6
Alter table EMP MODIFY(PHONE CONSTRAINT UNQ_PHONE UNIQUE);

2.7
Alter table EMP MODIFY(EMAIL CONSTRAINT UNQ_EMAIL UNIQUE);

2.8
Alter table MEDICAL_POLICY DROP CONSTRAINT MED_POL_PK;
Alter table MEDICAL_POLICY ADD CONSTRAINT MED_POL_PK PRIMARY KEY(EMPNO,POLICYNO,POLICYDATE);

2.9
Alter table MEDICAL_POLICY DROP CONSTRAINT PRE_AMOUNT;
Alter table MEDICAL_POLICY ADD CONSTRAINT PRE_AMOUNT CHECK(PREMIUM > 1000);
